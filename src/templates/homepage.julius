// Saves the original title (which will be updated during the upload)
var originalTitle = document.title;

// Shows/Hides the options menu.
$("#options_toggle").click(function () 
{
    $("#options_toggle").toggleClass("enabled");
    $("#options").slideToggle(100);
});

// Hides the upload form, start the upload and shows the uploads progress.
$("#upload_form").submit(function () 
{
    var files = document.getElementById("upload_files").files;
    if (files.length < 1) {
        // Checks if at least a file as been selected for upload.
        showError("Please select at least one file to upload.");
    } else if ((larges = largeFiles(files)).length > 0) {
        // Checks if some files exceed the maximum file size.
        showError(
            "The following files exceed the maximum file size " +
            "(#{show $ PrettyFileSize maxFileSize}) :<br />" + 
            larges.join("<br />") + "."
        );
    } else if (!document.getElementById("upload_email").checkValidity()) {
        // Checks if the email field is valid.
        showError("Please enter a valid email.");
    } else {
        $("#upload_form").hide("fast");
        $("#upload_error").fadeOut();

        var xhr = new XMLHttpRequest();
        var data = new FormData(document.getElementById("upload_form"));

        $("#upload_progress_complete").width(0);
        $("#upload_progress").fadeIn();
        $("#uploads_progress").show("fast");

        var oldPercent = 0;
        var oldBytes = 0;
        var oldTime = new Date().getTime();
        updateProgress(0, 0, 0);

        xhr.upload.addEventListener("progress", function (e) {
            var percent = parseInt(e.loaded / e.total * 100)
            if (percent != oldPercent) { // Doesn't update if no change.
                newTime = new Date().getTime();
                updateProgress(percent, e.loaded - oldBytes, newTime - oldTime);
                oldPercent = percent;
                oldBytes = e.loaded;
                oldTime = newTime;
            }
        }, false);

        xhr.addEventListener("load", function (e) {
            alert(e.target.responseText);
            restoreUploadForm();
        }, false);

        xhr.addEventListener("error", function (e) {
            showError("An error occured during the upload, please try again.");
            restoreUploadForm();
        }, false);

        xhr.addEventListener("abort", restoreUploadForm, false);

        xhr.open("POST", "@{UploadR}");
        xhr.send(data);
    }

    return false;
});

// Restores the upload form and hide the current uploads status.
function restoreUploadForm()
{
    $("#upload_progress").fadeOut();
    $("#uploads_progress").hide("fast");
    $("#upload_form").show("fast");
    document.title = originalTitle;
    $("#upload_status").html("Connecting ...");
    $("#upload_speed").html();
}

// Returns the list of the files which are to large to be uploaded.
function largeFiles(files)
{
    var l = [];
    for (var i = 0; i < files.length; i++) {
        var f = files[i];
        if (f.size > #{show maxFileSize})
            l.push(f.name);
    }

    return l;
}

// Shows the error message above the upload form.
function showError(message) 
{
    var error = $("#upload_error");
    error.html(message);
    error.fadeIn();
}

// Update the different elements of the interface with the status of the upload,
// given the percent of the upload, and the number of bytes transmitted during
// the elapsed time.
function updateProgress(percent, bytes, elapsed)
{
    if (percent < 100) {
        $("#upload_status").html("Uploading ...");

        var strPercent = percent + "%"
        $("#upload_progress_complete").width(strPercent);
        document.title = strPercent + " | " + originalTitle;

        // Computes the speed in bytes per second
        var speed = bytes * 1000 / elapsed;
        $("#upload_speed").html(prettySpeed(speed));
    } else {
        $("#upload_status").html("Waiting on server response ...");
        document.title = "Waiting ... | " + originalTitle;

        $("#upload_speed").html();
    }
}

// Returns a string with the speed in a human readable way.
function prettySpeed(bytesPerSecond)
{
    var pow1 = 1024;
    var pow2 = pow1 * 1024;
    var pow3 = pow2 * 1024;
    var pow4 = pow3 * 1024;

    // Rounnd the speed two number after the comma.
    function roundSpeed(speed)
    {
        return Math.round(speed * 100) / 100;
    }

    if (bytesPerSecond < 2)
        return bytesPerSecond + " byte/s";
    else if (bytesPerSecond < pow1)
        return bytesPerSecond + " bytes/s";
    else if (bytesPerSecond < pow2)
        return roundSpeed(bytesPerSecond / pow1) + " KiB/s";
    else if (bytesPerSecond < pow3)
        return roundSpeed(bytesPerSecond / pow2) + " MiB/s";
    else if (bytesPerSecond < pow4)
        return roundSpeed(bytesPerSecond / pow2) + " GiB/s";
    else // Boy, this is crazy fast !
        return roundSpeed(bytesPerSecond / pow2) + " TiB/s";
}